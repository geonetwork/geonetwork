<?xml version="1.0" encoding="UTF-8"?>
<!--

    (c) 2003 Open Source Geospatial Foundation - all rights reserved
    This code is licensed under the GPL 2.0 license,
    available at the root application directory.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.1</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>org.geonetwork</groupId>
  <artifactId>geonetwork</artifactId>
  <version>5.0.0-SNAPSHOT</version>

  <name>GeoNetwork opensource</name>
  <description>GeoNetwork opensource is a standards based, Free and
    Open Source catalog application to manage spatially referenced
    resources through the web.
  </description>
  <url>https://geonetwork-opensource.org</url>
  <organization>
    <name>Open Source Geospatial Foundation</name>
    <url>https://www.osgeo.org/</url>
  </organization>
  <inceptionYear>2003</inceptionYear>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/geonetwork/geonetwork/issues</url>
  </issueManagement>
  <licenses>
    <license>
      <name>General Public License (GPL)</name>
      <url>https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt</url>
    </license>
  </licenses>


  <properties>
    <java.version>21</java.version>
    <spring-cloud.version>2023.0.2</spring-cloud.version>
    <es.version>8.14.1</es.version>
    <jackson.version>2.17.0</jackson.version>
    <spotless.version>2.43.0</spotless.version>
    <lombok.version>1.18.34</lombok.version>
    <errorProne.version>2.18.0</errorProne.version>
    <pmd.version>6.42.0</pmd.version>
    <errorProne.version>2.29.0</errorProne.version>
    <!-- build -->
    <fork.javac>false</fork.javac>
    <javac.maxHeapSize>256M</javac.maxHeapSize>
    <!-- quality assurance -->
    <lint>deprecation,unchecked</lint>
    <qa>false</qa>
    <checkstyle.skip>false</checkstyle.skip>
    <errorProneFlags></errorProneFlags>
    <!--errorProneFlags>-XepDisableWarningsInGeneratedCode</errorProneFlags-->
    <!-- formatting -->
    <spotless.action>apply</spotless.action>
    <spotless.apply.skip>false</spotless.apply.skip>
    <pom.fmt.action>sort</pom.fmt.action>
    <pom.fmt.skip>${spotless.apply.skip}</pom.fmt.skip>
  </properties>

  <profiles>
    <!-- Use -Drelax property to avoid:
        * findbug
        * checkstyle
        * and tests. -->
    <profile>
      <id>relax-build</id>
      <activation>
        <property>
          <name>relax</name>
        </property>
      </activation>
      <properties>
        <qa>false</qa>
        <maven.test.skip>true</maven.test.skip>
      </properties>
    </profile>

    <profile>
      <id>full-build</id>
      <activation>
        <property>
          <name>!relax</name>
        </property>
      </activation>
      <properties>
        <qa>true</qa>
        <maven.test.skip>false</maven.test.skip>
      </properties>
    </profile>

    <profile>
      <id>spotless</id>
      <activation>
        <property>
          <name>!relax</name>
        </property>
      </activation>
      <build>
        <plugins>
          <!--
          See https://github.com/diffplug/spotless/tree/main/plugin-maven#java

          ./mvnw spotless:apply
          -->
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!--ratchetFrom>origin/main</ratchetFrom-->
              <java>
                <googleJavaFormat>
                  <style>GOOGLE</style>
                  <reflowLongStrings>true</reflowLongStrings>
                  <formatJavadoc>true</formatJavadoc>
                </googleJavaFormat>
                <removeUnusedImports/>
                <replaceRegex>
                  <name>Remove wildcard imports</name>
                  <searchRegex>import\s+[^\*\s]+\*;(\r\n|\r|\n)</searchRegex>
                  <replacement>$1</replacement>
                </replaceRegex>
              </java>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>checkstyle</id>
      <activation>
        <property>
          <name>!relax</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <id>check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <configLocation>google_checks.xml</configLocation>
              <logViolationsToConsole>true</logViolationsToConsole>
              <maxAllowedViolations>0</maxAllowedViolations>
              <violationSeverity>warning</violationSeverity>
              <suppressionsLocation>build/checkstyle_suppressions.xml</suppressionsLocation>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>errorprone</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <fork>true</fork>
              <showWarnings>true</showWarnings>
              <compilerArgs>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                <arg>-XDcompilePolicy=simple</arg>
                <arg>-Xplugin:ErrorProne -XepExcludedPaths:\Q${project.build.directory}\E.* ${errorProneFlags}</arg>
                <arg>-Xlint:${lint}</arg>
                <arg>-Werror</arg>
                <arg>-Xmaxwarns</arg>
                <arg>1000</arg>
              </compilerArgs>
              <annotationProcessorPaths>
                <path>
                  <groupId>org.projectlombok</groupId>
                  <artifactId>lombok</artifactId>
                  <version>${lombok.version}</version>
                </path>
                <path>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_core</artifactId>
                  <version>${errorProne.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>


  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-gateway-mvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>co.elastic.clients</groupId>
      <artifactId>elasticsearch-java</artifactId>
      <version>${es.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.2.6</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>2.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.diffplug.spotless</groupId>
      <artifactId>spotless-maven-plugin</artifactId>
      <version>${spotless.version}</version>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless.version}</version>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>4.5</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- compilation -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>21</source>
          <target>21</target>
          <debug>true</debug>
          <encoding>UTF-8</encoding>
          <fork>${fork.javac}</fork>
          <maxmem>${javac.maxHeapSize}</maxmem>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <!--
        https://oss.carbou.me/license-maven-plugin/
        Use mvn license:check to check the license headers
        Use mvn license:format to format the license headers
        Use mvn license:remove to remove the license headers
        -->
        <version>4.5</version>
        <configuration>
          <header>${maven.multiModuleProjectDirectory}/src/license/header.txt</header>
          <includes>
            <include>**/*.java</include>
            <include>**/*.xsd</include>
            <include>**/*.xml</include>
            <include>**/*.xsl</include>
            <include>**/*.html</include>
            <include>pom.xml</include>
          </includes>
        </configuration>
      </plugin>
      <!--
        See https://openapi-generator.tech/docs/generators/spring
          for more information on the configuration options

          Generated code is copy/pasted in source root because of error
          CollectionsApiController.java:[9,60] cannot find symbol
          symbol:   class GetRecordsBboxDtoDto
          location: package org.geonetwork.search.ogcapi.records.generated.model
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>7.6.0</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>
                ${project.basedir}/src/test/resources/ogcapirecords_openapi_spec/ogcapi-records-1-example-ref-schema-repo.yaml
              </inputSpec>
              <generatorName>spring</generatorName>
              <generateAliasAsModel>true</generateAliasAsModel>
              <modelNameSuffix>Dto</modelNameSuffix>
              <modelNameMappings>getRecords_bbox_parameter=GetRecordsBboxDto</modelNameMappings>
              <configOptions>
                <sourceFolder>src/gen/java/main</sourceFolder>
                <useSpringBoot3>true</useSpringBoot3>
                <generateBuilders>true</generateBuilders>
                <annotationLibrary>swagger2</annotationLibrary>
                <withXml>true</withXml>
                <useOptional>false</useOptional>
                <apiPackage>org.geonetwork.search.ogcapi.records.generated</apiPackage>
                <modelPackage>org.geonetwork.search.ogcapi.records.generated.model</modelPackage>
              </configOptions>
              <additionalProperties>
              </additionalProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      -->
    </plugins>
  </build>
</project>
