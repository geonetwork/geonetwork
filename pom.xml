<?xml version="1.0" encoding="UTF-8"?>
<!--

    (c) 2003 Open Source Geospatial Foundation - all rights reserved
    This code is licensed under the GPL 2.0 license,
    available at the root application directory.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.1</version>
    <relativePath></relativePath>
    <!-- lookup parent from repository -->
  </parent>

  <groupId>org.geonetwork</groupId>
  <artifactId>geonetwork</artifactId>
  <version>5.0.0-SNAPSHOT</version>

  <name>GeoNetwork opensource</name>
  <description>GeoNetwork opensource is a standards based, Free and
    Open Source catalog application to manage spatially referenced
    resources through the web.</description>
  <url>https://geonetwork-opensource.org</url>
  <inceptionYear>2003</inceptionYear>
  <organization>
    <name>Open Source Geospatial Foundation</name>
    <url>https://www.osgeo.org/</url>
  </organization>
  <licenses>
    <license>
      <name>General Public License (GPL)</name>
      <url>https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt</url>
    </license>
  </licenses>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/geonetwork/geonetwork/issues</url>
  </issueManagement>

  <properties>
    <java.version>21</java.version>
    <spring-cloud.version>2023.0.2</spring-cloud.version>
    <es.version>8.14.1</es.version>
    <jackson.version>2.17.0</jackson.version>
    <spotless.version>2.43.0</spotless.version>
    <lombok.version>1.18.34</lombok.version>
    <errorProne.version>2.18.0</errorProne.version>
    <pmd.version>6.42.0</pmd.version>
    <errorProne.version>2.29.0</errorProne.version>

    <!-- build -->
    <fork.javac>false</fork.javac>
    <javac.maxHeapSize>256M</javac.maxHeapSize>

    <!-- formatting -->
    <format.skip>false</format.skip>
    <spotless.check.skip>${format.skip}</spotless.check.skip>

    <!-- quality assurance and testing -->
    <lint>deprecation,unchecked</lint>
    <errorProneFlags></errorProneFlags>
    <qa>false</qa>
    <checkstyle.skip>true</checkstyle.skip>
    <license.skipCheckLicense>true</license.skipCheckLicense>

  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>1.20.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-gateway-mvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>co.elastic.clients</groupId>
      <artifactId>elasticsearch-java</artifactId>
      <version>${es.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.2.6</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.14.0</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>2.6.0</version>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <version>12.5</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>elasticsearch</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.diffplug.spotless</groupId>
      <artifactId>spotless-maven-plugin</artifactId>
      <version>${spotless.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <version>4.8.4</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless.version}</version>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>4.5</version>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>4.8.6.2</version>
        </plugin>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>2.15.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- compilation -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>21</source>
          <target>21</target>
          <debug>true</debug>
          <encoding>UTF-8</encoding>
          <fork>${fork.javac}</fork>
          <maxmem>${javac.maxHeapSize}</maxmem>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <!--
        https://oss.carbou.me/license-maven-plugin/

        license:format bound to process source stage
        license:check bound to verify stage
        -->
        <configuration>
          <skip>${format.skip}</skip>
          <licenseSets>
            <licenseSet>
              <header>${maven.multiModuleProjectDirectory}/src/license/header.txt</header>
              <useDefaultExcludes>true</useDefaultExcludes>
              <includes>
                <include>**/*.java</include>
                <include>**/*.xsd</include>
                <include>**/*.xml</include>
                <include>**/*.xsl</include>
                <include>**/*.html</include>
                <include>pom.xml</include>
              </includes>
              <excludes>
                <exclude>target/**.*</exclude>
              </excludes>
            </licenseSet>
          </licenseSets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <!--
        https://github.com/diffplug/spotless/tree/main/plugin-maven#java

        spotless:apply bound to process source stage
        spotless:check bound to verify stage
        -->
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!--ratchetFrom>origin/main</ratchetFrom-->
          <java>
            <googleJavaFormat>
              <style>GOOGLE</style>
              <reflowLongStrings>true</reflowLongStrings>
              <formatJavadoc>true</formatJavadoc>
            </googleJavaFormat>
            <removeUnusedImports></removeUnusedImports>
            <replaceRegex>
              <name>Remove wildcard imports</name>
              <searchRegex>import\s+[^\*\s]+\*;(\r\n|\r|\n)</searchRegex>
              <replacement>$1</replacement>
            </replaceRegex>
          </java>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <!--
        https://github.com/Ekryd/sortpom

        sortpom:sort bound to process source stage
        sortpom:verify bound to verify stage
        -->
        <configuration>
          <skip>${format.skip}</skip>
          <keepBlankLines>true</keepBlankLines>
          <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
          <createBackupFile>false</createBackupFile>
          <verifyFail>stop</verifyFail>
          <verifyFailOn>strict</verifyFailOn>
        </configuration>
      </plugin>

      <!--
        See https://openapi-generator.tech/docs/generators/spring
          for more information on the configuration options

          Generated code is copy/pasted in source root because of error
          CollectionsApiController.java:[9,60] cannot find symbol
          symbol:   class GetRecordsBboxDtoDto
          location: package org.geonetwork.search.ogcapi.records.generated.model
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>7.7.0</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/test/resources/ogcapirecords_openapi_spec/ogcapi-records-1-example-ref-schema-repo.yaml</inputSpec>
              <generatorName>spring</generatorName>
              <generateAliasAsModel>true</generateAliasAsModel>
              <modelNamePrefix>OgcApiRecords</modelNamePrefix>
              <modelNameSuffix>Dto</modelNameSuffix>
              <modelNameMappings>getRecords_bbox_parameter=GetRecordsBboxDto</modelNameMappings>
              <configOptions>
                <sourceFolder>src/gen/java/main</sourceFolder>
                <useSpringBoot3>true</useSpringBoot3>
                <generateBuilders>true</generateBuilders>
                <annotationLibrary>swagger2</annotationLibrary>
                <withXml>true</withXml>
                <useOptional>false</useOptional>
                <apiPackage>org.geonetwork.search.ogcapi.records.generated</apiPackage>
                <modelPackage>org.geonetwork.search.ogcapi.records.generated.model</modelPackage>
              </configOptions>
              <additionalProperties></additionalProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>
  -->
    </plugins>
  </build>

  <profiles>
    <!-- Use -Drelax property to avoid:
        * findbug
        * checkstyle
        * and tests. -->
    <profile>
      <id>relax-build</id>
      <activation>
        <property>
          <name>relax</name>
        </property>
      </activation>
      <properties>
        <maven.test.skip>true</maven.test.skip>

        <!-- formatting properties need to be skipped -->
        <format.skip>true</format.skip>
        <spotless.check.skip>true</spotless.check.skip>

      </properties>
    </profile>

    <!--                                            -->
    <!-- DEFAULT BUILD: Testing and formatting      -->
    <!--                                            -->
    <profile>
      <id>default-build</id>
      <activation>
        <property>
          <name>!relax</name>
        </property>
      </activation>
      <build>
        <plugins>

          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-apply</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>apply</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <!-- docs indicate check is bound to verify but I needed to add this -->
                <id>update-headers</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>com.github.ekryd.sortpom</groupId>
            <artifactId>sortpom-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>sort</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>sort</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
      <properties>
        <qa>false</qa>
        <maven.test.skip>false</maven.test.skip>
        <license.skipCheckLicense>true</license.skipCheckLicense>
      </properties>
    </profile>

    <!--                                            -->
    <!-- FULL BUILD: Testing and Quality Assurance  -->
    <!--                                            -->
    <profile>
      <id>full-build</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <properties>
        <qa>true</qa>
        <maven.test.skip>false</maven.test.skip>
        <format.skip>true</format.skip>
      </properties>
    </profile>

    <profile>
      <id>headers-check</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <!-- docs indicate check is bound to verify but I needed to add this -->
                <id>header-license-check</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>spotless-check</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-check</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>sortpom-check</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.ekryd.sortpom</groupId>
            <artifactId>sortpom-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>sortpom-check</id>
                <phase>verify</phase>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>checkstyle</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <!-- https://maven.apache.org/plugins/maven-checkstyle-plugin/ -->
            <executions>
              <execution>
                <id>check</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <configLocation>google_checks.xml</configLocation>
              <logViolationsToConsole>true</logViolationsToConsole>
              <maxAllowedViolations>0</maxAllowedViolations>
              <violationSeverity>warning</violationSeverity>
              <suppressionsLocation>build/checkstyle_suppressions.xml</suppressionsLocation>
              <skip>${checkstyle.skip}</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>spotbugs</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotbugs-check</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <effort>more</effort>
              <!--
              <threshold>High</threshold>
              -->
              <xmlOutput>true</xmlOutput>
              <!-- 1-4: terror, 5-9: scary, 10-14: trouble, 15-20: concern           -->
              <!-- increase this over time to check for more and more serious issues -->
              <maxRank>20</maxRank>
              <excludeFilterFile>${project.basedir}/build/spotbugs-exclude.xml</excludeFilterFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>spotbugs-security</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>security</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <effort>Max</effort>
                  <threshold>medium</threshold>
                  <failOnError>true</failOnError>
                  <includeFilterFile>${session.executionRootDirectory}/spotbugs-security-include.xml</includeFilterFile>
                  <excludeFilterFile>${session.executionRootDirectory}/spotbugs-security-exclude.xml</excludeFilterFile>
                  <plugins>
                    <plugin>
                      <groupId>com.h3xstream.findsecbugs</groupId>
                      <artifactId>findsecbugs-plugin</artifactId>
                      <version>1.12.0</version>
                    </plugin>
                  </plugins>
                  <xmlOutput>true</xmlOutput>
                  <maxRank>15</maxRank>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>errorprone</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <fork>${fork.javac}</fork>
              <showWarnings>true</showWarnings>
              <compilerArgs>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                <arg>-XDcompilePolicy=simple</arg>
                <arg>-Xplugin:ErrorProne -XepExcludedPaths:(\Q${project.build.directory}\E.*|.*generated.*) ${errorProneFlags}</arg>
                <arg>-Xlint:${lint}</arg>
                <arg>-Werror</arg>
                <arg>-Xmaxwarns</arg>
                <arg>1000</arg>
              </compilerArgs>
              <annotationProcessorPaths>
                <path>
                  <groupId>org.projectlombok</groupId>
                  <artifactId>lombok</artifactId>
                  <version>${lombok.version}</version>
                </path>
                <path>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_core</artifactId>
                  <version>${errorProne.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
