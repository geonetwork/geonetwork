/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Patterns } from './Patterns';
import {
  PatternsFromJSON,
  PatternsFromJSONTyped,
  PatternsToJSON,
} from './Patterns';

/**
 *
 * @export
 * @interface ValidationReport
 */
export interface ValidationReport {
  /**
   *
   * @type {number}
   * @memberof ValidationReport
   */
  displayPriority: number;
  /**
   *
   * @type {number}
   * @memberof ValidationReport
   */
  error: number;
  /**
   *
   * @type {string}
   * @memberof ValidationReport
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof ValidationReport
   */
  label: string;
  /**
   *
   * @type {Patterns}
   * @memberof ValidationReport
   */
  patterns: Patterns;
  /**
   *
   * @type {string}
   * @memberof ValidationReport
   */
  requirement: string;
  /**
   *
   * @type {string}
   * @memberof ValidationReport
   */
  schematronVerificationError?: string;
  /**
   *
   * @type {string}
   * @memberof ValidationReport
   */
  success: string;
  /**
   *
   * @type {string}
   * @memberof ValidationReport
   */
  total: string;
}

/**
 * Check if a given object implements the ValidationReport interface.
 */
export function instanceOfValidationReport(
  value: object
): value is ValidationReport {
  if (!('displayPriority' in value) || value['displayPriority'] === undefined)
    return false;
  if (!('error' in value) || value['error'] === undefined) return false;
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('label' in value) || value['label'] === undefined) return false;
  if (!('patterns' in value) || value['patterns'] === undefined) return false;
  if (!('requirement' in value) || value['requirement'] === undefined)
    return false;
  if (!('success' in value) || value['success'] === undefined) return false;
  if (!('total' in value) || value['total'] === undefined) return false;
  return true;
}

export function ValidationReportFromJSON(json: any): ValidationReport {
  return ValidationReportFromJSONTyped(json, false);
}

export function ValidationReportFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ValidationReport {
  if (json == null) {
    return json;
  }
  return {
    displayPriority: json['displayPriority'],
    error: json['error'],
    id: json['id'],
    label: json['label'],
    patterns: PatternsFromJSON(json['patterns']),
    requirement: json['requirement'],
    schematronVerificationError:
      json['schematronVerificationError'] == null
        ? undefined
        : json['schematronVerificationError'],
    success: json['success'],
    total: json['total'],
  };
}

export function ValidationReportToJSON(value?: ValidationReport | null): any {
  if (value == null) {
    return value;
  }
  return {
    displayPriority: value['displayPriority'],
    error: value['error'],
    id: value['id'],
    label: value['label'],
    patterns: PatternsToJSON(value['patterns']),
    requirement: value['requirement'],
    schematronVerificationError: value['schematronVerificationError'],
    success: value['success'],
    total: value['total'],
  };
}
