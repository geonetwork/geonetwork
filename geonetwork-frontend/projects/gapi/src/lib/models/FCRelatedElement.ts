/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Values } from './Values';
import { ValuesFromJSON, ValuesFromJSONTyped, ValuesToJSON } from './Values';

/**
 *
 * @export
 * @interface FCRelatedElement
 */
export interface FCRelatedElement {
  /**
   *
   * @type {string}
   * @memberof FCRelatedElement
   */
  code?: string;
  /**
   *
   * @type {string}
   * @memberof FCRelatedElement
   */
  definition?: string;
  /**
   *
   * @type {string}
   * @memberof FCRelatedElement
   */
  link?: string;
  /**
   *
   * @type {string}
   * @memberof FCRelatedElement
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof FCRelatedElement
   */
  type?: string;
  /**
   *
   * @type {Array<Values>}
   * @memberof FCRelatedElement
   */
  values?: Array<Values>;
}

/**
 * Check if a given object implements the FCRelatedElement interface.
 */
export function instanceOfFCRelatedElement(
  value: object
): value is FCRelatedElement {
  return true;
}

export function FCRelatedElementFromJSON(json: any): FCRelatedElement {
  return FCRelatedElementFromJSONTyped(json, false);
}

export function FCRelatedElementFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): FCRelatedElement {
  if (json == null) {
    return json;
  }
  return {
    code: json['code'] == null ? undefined : json['code'],
    definition: json['definition'] == null ? undefined : json['definition'],
    link: json['link'] == null ? undefined : json['link'],
    name: json['name'] == null ? undefined : json['name'],
    type: json['type'] == null ? undefined : json['type'],
    values:
      json['values'] == null
        ? undefined
        : (json['values'] as Array<any>).map(ValuesFromJSON),
  };
}

export function FCRelatedElementToJSON(value?: FCRelatedElement | null): any {
  if (value == null) {
    return value;
  }
  return {
    code: value['code'],
    definition: value['definition'],
    link: value['link'],
    name: value['name'],
    type: value['type'],
    values:
      value['values'] == null
        ? undefined
        : (value['values'] as Array<any>).map(ValuesToJSON),
  };
}
