/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface SuggestionType
 */
export interface SuggestionType {
  /**
   *
   * @type {string}
   * @memberof SuggestionType
   */
  category?: string;
  /**
   *
   * @type {string}
   * @memberof SuggestionType
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof SuggestionType
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof SuggestionType
   */
  operational: string;
  /**
   *
   * @type {string}
   * @memberof SuggestionType
   */
  params?: string;
  /**
   *
   * @type {string}
   * @memberof SuggestionType
   */
  process?: string;
  /**
   *
   * @type {string}
   * @memberof SuggestionType
   */
  target?: string;
}

/**
 * Check if a given object implements the SuggestionType interface.
 */
export function instanceOfSuggestionType(
  value: object
): value is SuggestionType {
  if (!('name' in value) || value['name'] === undefined) return false;
  if (!('operational' in value) || value['operational'] === undefined)
    return false;
  return true;
}

export function SuggestionTypeFromJSON(json: any): SuggestionType {
  return SuggestionTypeFromJSONTyped(json, false);
}

export function SuggestionTypeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): SuggestionType {
  if (json == null) {
    return json;
  }
  return {
    category: json['category'] == null ? undefined : json['category'],
    id: json['id'] == null ? undefined : json['id'],
    name: json['name'],
    operational: json['operational'],
    params: json['params'] == null ? undefined : json['params'],
    process: json['process'] == null ? undefined : json['process'],
    target: json['target'] == null ? undefined : json['target'],
  };
}

export function SuggestionTypeToJSON(value?: SuggestionType | null): any {
  if (value == null) {
    return value;
  }
  return {
    category: value['category'],
    id: value['id'],
    name: value['name'],
    operational: value['operational'],
    params: value['params'],
    process: value['process'],
    target: value['target'],
  };
}
