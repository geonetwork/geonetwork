/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Thesaurus information
 * @export
 * @interface ThesaurusInfo
 */
export interface ThesaurusInfo {
  /**
   *
   * @type {string}
   * @memberof ThesaurusInfo
   */
  defaultNamespace?: string;
  /**
   *
   * @type {string}
   * @memberof ThesaurusInfo
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof ThesaurusInfo
   */
  dname?: string;
  /**
   *
   * @type {string}
   * @memberof ThesaurusInfo
   */
  filename?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof ThesaurusInfo
   */
  multilingualDescriptions?: { [key: string]: string };
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof ThesaurusInfo
   */
  multilingualTitles?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof ThesaurusInfo
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof ThesaurusInfo
   */
  type?: string;
}

/**
 * Check if a given object implements the ThesaurusInfo interface.
 */
export function instanceOfThesaurusInfo(value: object): value is ThesaurusInfo {
  return true;
}

export function ThesaurusInfoFromJSON(json: any): ThesaurusInfo {
  return ThesaurusInfoFromJSONTyped(json, false);
}

export function ThesaurusInfoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ThesaurusInfo {
  if (json == null) {
    return json;
  }
  return {
    defaultNamespace:
      json['defaultNamespace'] == null ? undefined : json['defaultNamespace'],
    description: json['description'] == null ? undefined : json['description'],
    dname: json['dname'] == null ? undefined : json['dname'],
    filename: json['filename'] == null ? undefined : json['filename'],
    multilingualDescriptions:
      json['multilingualDescriptions'] == null
        ? undefined
        : json['multilingualDescriptions'],
    multilingualTitles:
      json['multilingualTitles'] == null
        ? undefined
        : json['multilingualTitles'],
    title: json['title'] == null ? undefined : json['title'],
    type: json['type'] == null ? undefined : json['type'],
  };
}

export function ThesaurusInfoToJSON(value?: ThesaurusInfo | null): any {
  if (value == null) {
    return value;
  }
  return {
    defaultNamespace: value['defaultNamespace'],
    description: value['description'],
    dname: value['dname'],
    filename: value['filename'],
    multilingualDescriptions: value['multilingualDescriptions'],
    multilingualTitles: value['multilingualTitles'],
    title: value['title'],
    type: value['type'],
  };
}
