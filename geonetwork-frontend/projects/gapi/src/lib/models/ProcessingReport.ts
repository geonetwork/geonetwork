/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Report } from './Report';
import { ReportFromJSON, ReportFromJSONTyped, ReportToJSON } from './Report';
import type { InfoReport } from './InfoReport';
import {
  InfoReportFromJSON,
  InfoReportFromJSONTyped,
  InfoReportToJSON,
} from './InfoReport';

/**
 *
 * @export
 * @interface ProcessingReport
 */
export interface ProcessingReport {
  /**
   *
   * @type {number}
   * @memberof ProcessingReport
   */
  ellapsedTimeInSeconds?: number;
  /**
   *
   * @type {string}
   * @memberof ProcessingReport
   */
  endIsoDateTime?: string;
  /**
   *
   * @type {Array<Report>}
   * @memberof ProcessingReport
   */
  errors?: Array<Report>;
  /**
   *
   * @type {Array<InfoReport>}
   * @memberof ProcessingReport
   */
  infos?: Array<InfoReport>;
  /**
   *
   * @type {boolean}
   * @memberof ProcessingReport
   */
  running?: boolean;
  /**
   *
   * @type {string}
   * @memberof ProcessingReport
   */
  startIsoDateTime?: string;
  /**
   *
   * @type {number}
   * @memberof ProcessingReport
   */
  totalTimeInSeconds?: number;
  /**
   *
   * @type {string}
   * @memberof ProcessingReport
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof ProcessingReport
   */
  uuid?: string;
}

/**
 * Check if a given object implements the ProcessingReport interface.
 */
export function instanceOfProcessingReport(
  value: object
): value is ProcessingReport {
  return true;
}

export function ProcessingReportFromJSON(json: any): ProcessingReport {
  return ProcessingReportFromJSONTyped(json, false);
}

export function ProcessingReportFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ProcessingReport {
  if (json == null) {
    return json;
  }
  return {
    ellapsedTimeInSeconds:
      json['ellapsedTimeInSeconds'] == null
        ? undefined
        : json['ellapsedTimeInSeconds'],
    endIsoDateTime:
      json['endIsoDateTime'] == null ? undefined : json['endIsoDateTime'],
    errors:
      json['errors'] == null
        ? undefined
        : (json['errors'] as Array<any>).map(ReportFromJSON),
    infos:
      json['infos'] == null
        ? undefined
        : (json['infos'] as Array<any>).map(InfoReportFromJSON),
    running: json['running'] == null ? undefined : json['running'],
    startIsoDateTime:
      json['startIsoDateTime'] == null ? undefined : json['startIsoDateTime'],
    totalTimeInSeconds:
      json['totalTimeInSeconds'] == null
        ? undefined
        : json['totalTimeInSeconds'],
    type: json['type'] == null ? undefined : json['type'],
    uuid: json['uuid'] == null ? undefined : json['uuid'],
  };
}

export function ProcessingReportToJSON(value?: ProcessingReport | null): any {
  if (value == null) {
    return value;
  }
  return {
    ellapsedTimeInSeconds: value['ellapsedTimeInSeconds'],
    endIsoDateTime: value['endIsoDateTime'],
    errors:
      value['errors'] == null
        ? undefined
        : (value['errors'] as Array<any>).map(ReportToJSON),
    infos:
      value['infos'] == null
        ? undefined
        : (value['infos'] as Array<any>).map(InfoReportToJSON),
    running: value['running'],
    startIsoDateTime: value['startIsoDateTime'],
    totalTimeInSeconds: value['totalTimeInSeconds'],
    type: value['type'],
    uuid: value['uuid'],
  };
}
