/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import { UserFromJSON, UserFromJSONTyped, UserToJSON } from './User';
import type { MetadataStatusDto } from './MetadataStatusDto';
import {
  MetadataStatusDtoFromJSON,
  MetadataStatusDtoFromJSONTyped,
  MetadataStatusDtoToJSON,
} from './MetadataStatusDto';
import type { StatusValue } from './StatusValue';
import {
  StatusValueFromJSON,
  StatusValueFromJSONTyped,
  StatusValueToJSON,
} from './StatusValue';

/**
 *
 * @export
 * @interface MetadataWorkflowStatusResponse
 */
export interface MetadataWorkflowStatusResponse {
  /**
   *
   * @type {MetadataStatusDto}
   * @memberof MetadataWorkflowStatusResponse
   */
  currentStatus?: MetadataStatusDto;
  /**
   *
   * @type {boolean}
   * @memberof MetadataWorkflowStatusResponse
   */
  hasEditPermission?: boolean;
  /**
   *
   * @type {Array<User>}
   * @memberof MetadataWorkflowStatusResponse
   */
  reviewers?: Array<User>;
  /**
   *
   * @type {Array<StatusValue>}
   * @memberof MetadataWorkflowStatusResponse
   */
  status?: Array<StatusValue>;
}

/**
 * Check if a given object implements the MetadataWorkflowStatusResponse interface.
 */
export function instanceOfMetadataWorkflowStatusResponse(
  value: object
): value is MetadataWorkflowStatusResponse {
  return true;
}

export function MetadataWorkflowStatusResponseFromJSON(
  json: any
): MetadataWorkflowStatusResponse {
  return MetadataWorkflowStatusResponseFromJSONTyped(json, false);
}

export function MetadataWorkflowStatusResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): MetadataWorkflowStatusResponse {
  if (json == null) {
    return json;
  }
  return {
    currentStatus:
      json['currentStatus'] == null
        ? undefined
        : MetadataStatusDtoFromJSON(json['currentStatus']),
    hasEditPermission:
      json['hasEditPermission'] == null ? undefined : json['hasEditPermission'],
    reviewers:
      json['reviewers'] == null
        ? undefined
        : (json['reviewers'] as Array<any>).map(UserFromJSON),
    status:
      json['status'] == null
        ? undefined
        : (json['status'] as Array<any>).map(StatusValueFromJSON),
  };
}

export function MetadataWorkflowStatusResponseToJSON(
  value?: MetadataWorkflowStatusResponse | null
): any {
  if (value == null) {
    return value;
  }
  return {
    currentStatus: MetadataStatusDtoToJSON(value['currentStatus']),
    hasEditPermission: value['hasEditPermission'],
    reviewers:
      value['reviewers'] == null
        ? undefined
        : (value['reviewers'] as Array<any>).map(UserToJSON),
    status:
      value['status'] == null
        ? undefined
        : (value['status'] as Array<any>).map(StatusValueToJSON),
  };
}
