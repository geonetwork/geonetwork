/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ISODate } from './ISODate';
import {
  ISODateFromJSON,
  ISODateFromJSONTyped,
  ISODateToJSON,
} from './ISODate';
import type { StatusValue } from './StatusValue';
import {
  StatusValueFromJSON,
  StatusValueFromJSONTyped,
  StatusValueToJSON,
} from './StatusValue';

/**
 *
 * @export
 * @interface MetadataStatusDto
 */
export interface MetadataStatusDto {
  /**
   *
   * @type {ISODate}
   * @memberof MetadataStatusDto
   */
  changeDate?: ISODate;
  /**
   *
   * @type {string}
   * @memberof MetadataStatusDto
   */
  changeMessage?: string;
  /**
   *
   * @type {ISODate}
   * @memberof MetadataStatusDto
   */
  closeDate?: ISODate;
  /**
   *
   * @type {string}
   * @memberof MetadataStatusDto
   */
  currentState?: string;
  /**
   *
   * @type {ISODate}
   * @memberof MetadataStatusDto
   */
  dueDate?: ISODate;
  /**
   *
   * @type {number}
   * @memberof MetadataStatusDto
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof MetadataStatusDto
   */
  metadataId?: number;
  /**
   *
   * @type {number}
   * @memberof MetadataStatusDto
   */
  owner?: number;
  /**
   *
   * @type {string}
   * @memberof MetadataStatusDto
   */
  previousState?: string;
  /**
   *
   * @type {number}
   * @memberof MetadataStatusDto
   */
  relatedMetadataStatusId?: number;
  /**
   *
   * @type {StatusValue}
   * @memberof MetadataStatusDto
   */
  statusValue?: StatusValue;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof MetadataStatusDto
   */
  titles?: { [key: string]: string };
  /**
   *
   * @type {number}
   * @memberof MetadataStatusDto
   */
  userId?: number;
  /**
   *
   * @type {string}
   * @memberof MetadataStatusDto
   */
  uuid?: string;
}

/**
 * Check if a given object implements the MetadataStatusDto interface.
 */
export function instanceOfMetadataStatusDto(
  value: object
): value is MetadataStatusDto {
  return true;
}

export function MetadataStatusDtoFromJSON(json: any): MetadataStatusDto {
  return MetadataStatusDtoFromJSONTyped(json, false);
}

export function MetadataStatusDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): MetadataStatusDto {
  if (json == null) {
    return json;
  }
  return {
    changeDate:
      json['changeDate'] == null
        ? undefined
        : ISODateFromJSON(json['changeDate']),
    changeMessage:
      json['changeMessage'] == null ? undefined : json['changeMessage'],
    closeDate:
      json['closeDate'] == null
        ? undefined
        : ISODateFromJSON(json['closeDate']),
    currentState:
      json['currentState'] == null ? undefined : json['currentState'],
    dueDate:
      json['dueDate'] == null ? undefined : ISODateFromJSON(json['dueDate']),
    id: json['id'] == null ? undefined : json['id'],
    metadataId: json['metadataId'] == null ? undefined : json['metadataId'],
    owner: json['owner'] == null ? undefined : json['owner'],
    previousState:
      json['previousState'] == null ? undefined : json['previousState'],
    relatedMetadataStatusId:
      json['relatedMetadataStatusId'] == null
        ? undefined
        : json['relatedMetadataStatusId'],
    statusValue:
      json['statusValue'] == null
        ? undefined
        : StatusValueFromJSON(json['statusValue']),
    titles: json['titles'] == null ? undefined : json['titles'],
    userId: json['userId'] == null ? undefined : json['userId'],
    uuid: json['uuid'] == null ? undefined : json['uuid'],
  };
}

export function MetadataStatusDtoToJSON(value?: MetadataStatusDto | null): any {
  if (value == null) {
    return value;
  }
  return {
    changeDate: ISODateToJSON(value['changeDate']),
    changeMessage: value['changeMessage'],
    closeDate: ISODateToJSON(value['closeDate']),
    currentState: value['currentState'],
    dueDate: ISODateToJSON(value['dueDate']),
    id: value['id'],
    metadataId: value['metadataId'],
    owner: value['owner'],
    previousState: value['previousState'],
    relatedMetadataStatusId: value['relatedMetadataStatusId'],
    statusValue: StatusValueToJSON(value['statusValue']),
    titles: value['titles'],
    userId: value['userId'],
    uuid: value['uuid'],
  };
}
