/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface AnonymousDoiServer
 */
export interface AnonymousDoiServer {
  /**
   *
   * @type {string}
   * @memberof AnonymousDoiServer
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof AnonymousDoiServer
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof AnonymousDoiServer
   */
  landingPageTemplate?: string;
  /**
   *
   * @type {string}
   * @memberof AnonymousDoiServer
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof AnonymousDoiServer
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof AnonymousDoiServer
   */
  pattern?: string;
  /**
   *
   * @type {string}
   * @memberof AnonymousDoiServer
   */
  prefix?: string;
  /**
   *
   * @type {string}
   * @memberof AnonymousDoiServer
   */
  publicUrl?: string;
  /**
   *
   * @type {Set<number>}
   * @memberof AnonymousDoiServer
   */
  publicationGroups?: Set<number>;
  /**
   *
   * @type {string}
   * @memberof AnonymousDoiServer
   */
  url?: string;
  /**
   *
   * @type {string}
   * @memberof AnonymousDoiServer
   */
  username?: string;
}

/**
 * Check if a given object implements the AnonymousDoiServer interface.
 */
export function instanceOfAnonymousDoiServer(
  value: object
): value is AnonymousDoiServer {
  return true;
}

export function AnonymousDoiServerFromJSON(json: any): AnonymousDoiServer {
  return AnonymousDoiServerFromJSONTyped(json, false);
}

export function AnonymousDoiServerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AnonymousDoiServer {
  if (json == null) {
    return json;
  }
  return {
    description: json['description'] == null ? undefined : json['description'],
    id: json['id'] == null ? undefined : json['id'],
    landingPageTemplate:
      json['landingPageTemplate'] == null
        ? undefined
        : json['landingPageTemplate'],
    name: json['name'] == null ? undefined : json['name'],
    password: json['password'] == null ? undefined : json['password'],
    pattern: json['pattern'] == null ? undefined : json['pattern'],
    prefix: json['prefix'] == null ? undefined : json['prefix'],
    publicUrl: json['publicUrl'] == null ? undefined : json['publicUrl'],
    publicationGroups:
      json['publicationGroups'] == null ? undefined : json['publicationGroups'],
    url: json['url'] == null ? undefined : json['url'],
    username: json['username'] == null ? undefined : json['username'],
  };
}

export function AnonymousDoiServerToJSON(
  value?: AnonymousDoiServer | null
): any {
  if (value == null) {
    return value;
  }
  return {
    description: value['description'],
    id: value['id'],
    landingPageTemplate: value['landingPageTemplate'],
    name: value['name'],
    password: value['password'],
    pattern: value['pattern'],
    prefix: value['prefix'],
    publicUrl: value['publicUrl'],
    publicationGroups:
      value['publicationGroups'] == null
        ? undefined
        : Array.from(value['publicationGroups'] as Set<any>),
    url: value['url'],
    username: value['username'],
  };
}
