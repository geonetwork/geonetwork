/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PageableObject } from './PageableObject';
import {
  PageableObjectFromJSON,
  PageableObjectFromJSONTyped,
  PageableObjectToJSON,
} from './PageableObject';
import type { SortObject } from './SortObject';
import {
  SortObjectFromJSON,
  SortObjectFromJSONTyped,
  SortObjectToJSON,
} from './SortObject';
import type { Link } from './Link';
import { LinkFromJSON, LinkFromJSONTyped, LinkToJSON } from './Link';

/**
 *
 * @export
 * @interface PageLink
 */
export interface PageLink {
  /**
   *
   * @type {Array<Link>}
   * @memberof PageLink
   */
  content?: Array<Link>;
  /**
   *
   * @type {boolean}
   * @memberof PageLink
   */
  empty?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PageLink
   */
  first?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PageLink
   */
  last?: boolean;
  /**
   *
   * @type {number}
   * @memberof PageLink
   */
  number?: number;
  /**
   *
   * @type {number}
   * @memberof PageLink
   */
  numberOfElements?: number;
  /**
   *
   * @type {PageableObject}
   * @memberof PageLink
   */
  pageable?: PageableObject;
  /**
   *
   * @type {number}
   * @memberof PageLink
   */
  size?: number;
  /**
   *
   * @type {Array<SortObject>}
   * @memberof PageLink
   */
  sort?: Array<SortObject>;
  /**
   *
   * @type {number}
   * @memberof PageLink
   */
  totalElements?: number;
  /**
   *
   * @type {number}
   * @memberof PageLink
   */
  totalPages?: number;
}

/**
 * Check if a given object implements the PageLink interface.
 */
export function instanceOfPageLink(value: object): value is PageLink {
  return true;
}

export function PageLinkFromJSON(json: any): PageLink {
  return PageLinkFromJSONTyped(json, false);
}

export function PageLinkFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PageLink {
  if (json == null) {
    return json;
  }
  return {
    content:
      json['content'] == null
        ? undefined
        : (json['content'] as Array<any>).map(LinkFromJSON),
    empty: json['empty'] == null ? undefined : json['empty'],
    first: json['first'] == null ? undefined : json['first'],
    last: json['last'] == null ? undefined : json['last'],
    number: json['number'] == null ? undefined : json['number'],
    numberOfElements:
      json['numberOfElements'] == null ? undefined : json['numberOfElements'],
    pageable:
      json['pageable'] == null
        ? undefined
        : PageableObjectFromJSON(json['pageable']),
    size: json['size'] == null ? undefined : json['size'],
    sort:
      json['sort'] == null
        ? undefined
        : (json['sort'] as Array<any>).map(SortObjectFromJSON),
    totalElements:
      json['totalElements'] == null ? undefined : json['totalElements'],
    totalPages: json['totalPages'] == null ? undefined : json['totalPages'],
  };
}

export function PageLinkToJSON(value?: PageLink | null): any {
  if (value == null) {
    return value;
  }
  return {
    content:
      value['content'] == null
        ? undefined
        : (value['content'] as Array<any>).map(LinkToJSON),
    empty: value['empty'],
    first: value['first'],
    last: value['last'],
    number: value['number'],
    numberOfElements: value['numberOfElements'],
    pageable: PageableObjectToJSON(value['pageable']),
    size: value['size'],
    sort:
      value['sort'] == null
        ? undefined
        : (value['sort'] as Array<any>).map(SortObjectToJSON),
    totalElements: value['totalElements'],
    totalPages: value['totalPages'],
  };
}
