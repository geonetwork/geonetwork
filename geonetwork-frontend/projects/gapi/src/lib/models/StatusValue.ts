/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface StatusValue
 */
export interface StatusValue {
  /**
   *
   * @type {number}
   * @memberof StatusValue
   */
  displayOrder?: number;
  /**
   *
   * @type {number}
   * @memberof StatusValue
   */
  id?: number;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof StatusValue
   */
  label?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof StatusValue
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof StatusValue
   */
  notificationLevel?: StatusValueNotificationLevelEnum;
  /**
   *
   * @type {boolean}
   * @memberof StatusValue
   */
  reserved?: boolean;
  /**
   *
   * @type {string}
   * @memberof StatusValue
   */
  reservedJpaWorkaround?: string;
  /**
   *
   * @type {string}
   * @memberof StatusValue
   */
  type?: StatusValueTypeEnum;
}

/**
 * @export
 */
export const StatusValueNotificationLevelEnum = {
  StatusUserOwner: 'statusUserOwner',
  CatalogueAdministrator: 'catalogueAdministrator',
  CatalogueProfileAdministrator: 'catalogueProfileAdministrator',
  CatalogueProfileUserAdmin: 'catalogueProfileUserAdmin',
  CatalogueProfileReviewer: 'catalogueProfileReviewer',
  CatalogueProfileEditor: 'catalogueProfileEditor',
  CatalogueProfileRegisteredUser: 'catalogueProfileRegisteredUser',
  CatalogueProfileGuest: 'catalogueProfileGuest',
  RecordProfileReviewer: 'recordProfileReviewer',
  RecordUserAuthor: 'recordUserAuthor',
  RecordGroupEmail: 'recordGroupEmail',
} as const;
export type StatusValueNotificationLevelEnum =
  (typeof StatusValueNotificationLevelEnum)[keyof typeof StatusValueNotificationLevelEnum];

/**
 * @export
 */
export const StatusValueTypeEnum = {
  Workflow: 'workflow',
  Task: 'task',
  Event: 'event',
} as const;
export type StatusValueTypeEnum =
  (typeof StatusValueTypeEnum)[keyof typeof StatusValueTypeEnum];

/**
 * Check if a given object implements the StatusValue interface.
 */
export function instanceOfStatusValue(value: object): value is StatusValue {
  return true;
}

export function StatusValueFromJSON(json: any): StatusValue {
  return StatusValueFromJSONTyped(json, false);
}

export function StatusValueFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): StatusValue {
  if (json == null) {
    return json;
  }
  return {
    displayOrder:
      json['displayOrder'] == null ? undefined : json['displayOrder'],
    id: json['id'] == null ? undefined : json['id'],
    label: json['label'] == null ? undefined : json['label'],
    name: json['name'] == null ? undefined : json['name'],
    notificationLevel:
      json['notificationLevel'] == null ? undefined : json['notificationLevel'],
    reserved: json['reserved'] == null ? undefined : json['reserved'],
    reservedJpaWorkaround:
      json['reserved_JpaWorkaround'] == null
        ? undefined
        : json['reserved_JpaWorkaround'],
    type: json['type'] == null ? undefined : json['type'],
  };
}

export function StatusValueToJSON(value?: StatusValue | null): any {
  if (value == null) {
    return value;
  }
  return {
    displayOrder: value['displayOrder'],
    id: value['id'],
    label: value['label'],
    name: value['name'],
    notificationLevel: value['notificationLevel'],
    reserved: value['reserved'],
    reserved_JpaWorkaround: value['reservedJpaWorkaround'],
    type: value['type'],
  };
}
