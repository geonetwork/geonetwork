/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface PageProperties
 */
export interface PageProperties {
  /**
   *
   * @type {string}
   * @memberof PageProperties
   */
  content?: string;
  /**
   *
   * @type {string}
   * @memberof PageProperties
   */
  format?: PagePropertiesFormatEnum;
  /**
   *
   * @type {Array<string>}
   * @memberof PageProperties
   */
  groups?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof PageProperties
   */
  icon?: string;
  /**
   *
   * @type {string}
   * @memberof PageProperties
   */
  label?: string;
  /**
   *
   * @type {string}
   * @memberof PageProperties
   */
  language?: string;
  /**
   *
   * @type {string}
   * @memberof PageProperties
   */
  link?: string;
  /**
   *
   * @type {string}
   * @memberof PageProperties
   */
  pageId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PageProperties
   */
  sections?: Array<PagePropertiesSectionsEnum>;
  /**
   *
   * @type {string}
   * @memberof PageProperties
   */
  status?: PagePropertiesStatusEnum;
}

/**
 * @export
 */
export const PagePropertiesFormatEnum = {
  Link: 'LINK',
  Html: 'HTML',
  Htmlpage: 'HTMLPAGE',
  Text: 'TEXT',
} as const;
export type PagePropertiesFormatEnum =
  (typeof PagePropertiesFormatEnum)[keyof typeof PagePropertiesFormatEnum];

/**
 * @export
 */
export const PagePropertiesSectionsEnum = {
  Top: 'TOP',
  Footer: 'FOOTER',
  Menu: 'MENU',
  Submenu: 'SUBMENU',
  CustomMenu1: 'CUSTOM_MENU1',
  CustomMenu2: 'CUSTOM_MENU2',
  CustomMenu3: 'CUSTOM_MENU3',
} as const;
export type PagePropertiesSectionsEnum =
  (typeof PagePropertiesSectionsEnum)[keyof typeof PagePropertiesSectionsEnum];

/**
 * @export
 */
export const PagePropertiesStatusEnum = {
  Public: 'PUBLIC',
  PublicOnly: 'PUBLIC_ONLY',
  Groups: 'GROUPS',
  Private: 'PRIVATE',
  Hidden: 'HIDDEN',
} as const;
export type PagePropertiesStatusEnum =
  (typeof PagePropertiesStatusEnum)[keyof typeof PagePropertiesStatusEnum];

/**
 * Check if a given object implements the PageProperties interface.
 */
export function instanceOfPageProperties(
  value: object
): value is PageProperties {
  return true;
}

export function PagePropertiesFromJSON(json: any): PageProperties {
  return PagePropertiesFromJSONTyped(json, false);
}

export function PagePropertiesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PageProperties {
  if (json == null) {
    return json;
  }
  return {
    content: json['content'] == null ? undefined : json['content'],
    format: json['format'] == null ? undefined : json['format'],
    groups: json['groups'] == null ? undefined : json['groups'],
    icon: json['icon'] == null ? undefined : json['icon'],
    label: json['label'] == null ? undefined : json['label'],
    language: json['language'] == null ? undefined : json['language'],
    link: json['link'] == null ? undefined : json['link'],
    pageId: json['pageId'] == null ? undefined : json['pageId'],
    sections: json['sections'] == null ? undefined : json['sections'],
    status: json['status'] == null ? undefined : json['status'],
  };
}

export function PagePropertiesToJSON(value?: PageProperties | null): any {
  if (value == null) {
    return value;
  }
  return {
    content: value['content'],
    format: value['format'],
    groups: value['groups'],
    icon: value['icon'],
    label: value['label'],
    language: value['language'],
    link: value['link'],
    pageId: value['pageId'],
    sections: value['sections'],
    status: value['status'],
  };
}
