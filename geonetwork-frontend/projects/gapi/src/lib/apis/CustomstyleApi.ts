/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork 4.4.7 OpenAPI Documentation
 * This is the description of the GeoNetwork OpenAPI. Use this API to manage your catalog.
 *
 * The version of the OpenAPI document: 4.4.7
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';

export interface SaveCssStyleRequest {
  body: string;
}

/**
 *
 */
export class CustomstyleApi extends runtime.BaseAPI {
  /**
   * This returns a map with all Less variables.
   * Get CssStyleSettings
   */
  async getCssStyleRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<{ [key: string]: string }>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/customstyle`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * This returns a map with all Less variables.
   * Get CssStyleSettings
   */
  async getCssStyle(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<{ [key: string]: string }> {
    const response = await this.getCssStyleRaw(initOverrides);
    return await response.value();
  }

  /**
   * Saves custom style variables.
   * Saves custom style variables.
   */
  async saveCssStyleRaw(
    requestParameters: SaveCssStyleRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<string>> {
    if (requestParameters['body'] == null) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter "body" was null or undefined when calling saveCssStyle().'
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/customstyle`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: requestParameters['body'] as any,
      },
      initOverrides
    );

    if (this.isJsonMime(response.headers.get('content-type'))) {
      return new runtime.JSONApiResponse<string>(response);
    } else {
      return new runtime.TextApiResponse(response) as any;
    }
  }

  /**
   * Saves custom style variables.
   * Saves custom style variables.
   */
  async saveCssStyle(
    requestParameters: SaveCssStyleRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<string> {
    const response = await this.saveCssStyleRaw(
      requestParameters,
      initOverrides
    );
    return await response.value();
  }
}
