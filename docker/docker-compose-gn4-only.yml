x-geonetwork-environment:  &default-geonetwork-environment
  WEBAPP_CONTEXT_PATH: /geonetwork
  DATA_DIR: /catalogue-data
  TZ: Europe/Amsterdam

  JAVA_OPTS: >-
    --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
    -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
    -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC
    -Djetty.httpConfig.requestHeaderSize=32768
    -Dorg.eclipse.jetty.server.Request.maxFormContentSize=500000
    -Dorg.eclipse.jetty.server.Request.maxFormKeys=4000
  # For remote debug
  # -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005

  GN_CONFIG_PROPERTIES: >-
    -Dgeonetwork.dir=/catalogue-data
    -Dgeonetwork.formatter.dir=/catalogue-data/data/formatter
    -Dgeonetwork.schema.dir=/opt/geonetwork/WEB-INF/data/config/schema_plugins
    -Dgeonetwork.indexConfig.dir=/opt/geonetwork/WEB-INF/data/config/index
    -Dgeonetwork.schemapublication.dir=/opt/geonetwork/WEB-INF/data/resources/schemapublication
    -Dgeonetwork.htmlcache.dir=/opt/geonetwork/WEB-INF/data/resources/htmlcache
    -Dlogout.success.url=http://localhost:7979/geonetwork/srv/eng/catalog.search
    -DloginForm=http://localhost:7979/geonetwork/srv/eng/catalog.signin
    -DloginErrorForm=http://localhost:7979/geonetwork/srv/eng/catalog.signin?failure=true
    -Des.host=host.docker.internal
    -Des.protocol=http
    -Des.port=9200
    -Des.url=http://host.docker.internal:9200
    -Des.username=
    -Des.password=
    -Dgeonetwork.ESFeaturesProxy.targetUri=http://host.docker.internal:9200/gn-features/{_}

  GEONETWORK_DB_TYPE: postgres
  GEONETWORK_DB_HOST: host.docker.internal
  GEONETWORK_DB_PORT: ${GEONETWORK_DB_PORT}
  GEONETWORK_DB_NAME: ${GEONETWORK_DB_NAME}
  GEONETWORK_DB_USERNAME: ${GEONETWORK_DB_USERNAME}
  GEONETWORK_DB_PASSWORD: ${GEONETWORK_DB_PASSWORD}
  VIRTUAL_HOST: localhost

x-service-geonetwork: &default-service-geonetwork
  image: geonetwork:4.4.7
  healthcheck:
    test: "curl http://localhost:8080/"
    interval: 5s
    timeout: 5s
    retries: 30
  restart: always
  volumes:
    - geonetwork:/catalogue-data
#  depends_on:
#    database:
#      condition: service_healthy
  networks:
    - gn-network
  extra_hosts:
    - "host.docker.internal:host-gateway"
  ports:
    - 8080:8080



services:
  geonetwork4:
    <<: *default-service-geonetwork
    environment:
      <<: *default-geonetwork-environment
      HARVESTER_SCHEDULER_ENABLED: "true"
      HARVESTER_REFRESH_INTERVAL_MINUTES: 2
      JWTHEADERS_UserNameHeaderName: gn5.to.gn4.trusted.json.auth
      JWTHEADERS_UserNameFormat: JSON
      JWTHEADERS_UserNameJsonPath: username
      JWTHEADERS_JwtHeaderRoleSource: DB
      JWTHEADERS_UpdateProfile: false
      JWTHEADERS_UpdateGroup: false
      #    ports:
      #      - 8080:8080
    expose:
      - "8080"

volumes:
  geonetwork:
    name: ${COMPOSE_PROJECT_NAME}_geonetwork

networks:
  gn-network:
    driver: bridge
