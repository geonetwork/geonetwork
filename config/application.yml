geonetwork:
  url: http://localhost:8080/geonetwork
  index:
    url: http://localhost:9200
    indexPrefix: gn5-
    indexRecordName: gn5-records
    username: elastic
    password: changeme
    elasticsearch:
      settings:
        maxResultWindow: 50000
        mapping:
          totalFields: 10000
  indexing:
    chunksize: 500
    poolsize: 10
    bulktimeout: 45s
    requestimeout: 45000
    # Elasticsearch Bulk Async API
    asynchronous: false
  directory:
    data: /data/dev/gn/5/web/src/main/webapp/WEB-INF/data/data
  openapi:
    url: http://localhost:7979
  settings:
    system:
      metadata:
        prefergrouplogo: true
  security:
    provider: database
    passwordSalt: secret-hash-salt=
    databaseUserAuthProperty: USERNAME_OR_EMAIL

server:
  port: 7979
  servlet:
    context-path: /
  forward-headers-strategy: framework

spring:
  application:
    name: GeoNetwork
  datasource:
    url: jdbc:postgresql://localhost:5432/geonetwork
    driverClassName: org.postgresql.Driver
    #    url: jdbc:h2:mem:gn5
    #    url: jdbc:h2:~/gn;AUTO_SERVER=TRUE
    #    driverClassName: org.h2.Driver
    username: postgres
    password: postgres
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  #    database-platform: org.hibernate.dialect.H2Dialect
  security:
    oauth2:
      client:
        registration:
          github:
            clientId: github-client-id
            clientSecret: github-client-secret
  #          custom:
  #            client-id: custom-client-id
  #            client-secret: custom-client-secret
  #        provider:
  #          custom:
  #            authorization-uri: https://custom/auth/realms/test/protocol/openid-connect/auth
  #            token-uri: https://custom/auth/realms/test/protocol/openid-connect/token
  #            user-info-uri: https://custom/auth/realms/test/protocol/openid-connect/userinfo
  #            jwk-set-uri: https://custom/auth/realms/test/protocol/openid-connect/certs
  #            issuer-uri: https://custom/auth/realms/test
  cloud:
    gateway:
      mvc:
        routes:
          - id: geonetwork_proxy_redirect
            uri: ${geonetwork.openapi.url}
            predicates:
              - Path=/geonetwork/proxy
            filters:
              - RewritePath=/geonetwork/(?<url>.*), /api/$\{url}
          - id: geonetwork_route
            uri: ${geonetwork.url}
            predicates:
              - Path=/geonetwork/**
            filters:
              - addSimpleGn4SecurityHeader=gn5.to.gn4.trusted.json.auth
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false
  config:
    import:
      optional:classpath:application-data-ingester.yml
management:
  endpoint:
    info:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

springdoc:
  swagger-ui:
    path: /doc/api/


debug: false

logging:
  level:
    org.geonetwork.schemas: DEBUG
    org.geonetwork.data: DEBUG
#    org.geonetwork.tasks.indexing: DEBUG
#    org.elasticsearch.client.RestClient: TRACE
#    org.apache.http.impl.client and org.apache.http.wire: TRACE
#    org.apache.http.headers: TRACE
#    org.springframework.cache: TRACE

---

spring:
  config:
    import:
      optional:classpath:application-test.yml
      optional:classpath:application-data-ingester.yml
    activate:
      on-profile: test
