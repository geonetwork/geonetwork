#
# ENVIRONMENT VARIABLES
#
#    Var                default                           meaning
# --------------------------------------------------------------------------------------------------
#  GN5_BASE_URL       http://localhost:7979/            Where is GN5 deployed.
#  GN4_BASE_URL       http://localhost:8080/geonetwork  Where is GN4?
#  GN4_PROXY_BASE_URL http://localhost:7979/geonetwork  Where is proxied GN4?
#  ELASTIC_URL        http://localhost:9200             Where is elastic?
#  GATEWAY_GEONETWORK_PATH /geonetwork/**               Where is the proxy to GN4?
#
#

geonetwork:
  openapi-records:
    ogcapi-records-json:
      includeRawXML: false
      includeElasticJson: false
    ogcapi-property-mapping:
      fields:
        - ogcProperty: spatialRepresentationType
          elasticProperty: cl_spatialRepresentationType.key
          indexRecordProperty: codelists.["cl_spatialRepresentationType"].[*].properties.["key"]
          typeOverride: LIST_STRING
          facetsConfig:
            - facetName: spatialRepresentationType
              facetType: TERM
        - ogcProperty: resourceType
          elasticProperty: resourceType
          indexRecordProperty: resourceType
          isSortable: true
          isQueryable: true
          facetsConfig:
            - facetName: resourceType
              facetType: TERM
        - ogcProperty: format
          elasticProperty: format
          indexRecordProperty: formats
          addPropertyToOutput: false
          facetsConfig:
            - facetName: format
              facetType: TERM
              bucketCount: 50
        - ogcProperty: keywords
          elasticProperty: tag.langeng
          indexRecordProperty: tag.[*].["default"]
          addPropertyToOutput: false
          facetsConfig:
            - facetName: keywords
              facetType: TERM
              bucketCount: 50
        - ogcProperty: updateFrequency
          elasticProperty: cl_maintenanceAndUpdateFrequency.key
          indexRecordProperty: codelists.["cl_maintenanceAndUpdateFrequency"].[*].properties.["key"]
          typeOverride: SINGLE_STRING
          isSortable: true
          isQueryable: true
          facetsConfig:
            - facetName: updateFrequency
              facetType: TERM
              bucketCount: 50
        - ogcProperty: creationYearForResource
          elasticProperty: creationYearForResource
          indexRecordProperty: resourceDateDetails.["creationYearForResource"].[0]
          isSortable: true
          facetsConfig:
            - facetName: creationYearForResource
              facetType: HISTOGRAM_FIXED_INTERVAL
              numberBucketInterval: 5
              bucketCount: 25
              bucketSorting: VALUE
            - facetName: creationYearForResource2
              facetType: HISTOGRAM_FIXED_BUCKET_COUNT
              bucketCount: 5
              bucketSorting: VALUE
        - ogcProperty: linkProtocol
          elasticProperty: linkProtocol
          indexRecordProperty: linkProtocols
          facetsConfig:
            - facetName: availableInServices
              facetType: FILTER
              filters:
                - filterName: availableInDownloadService
                  filterEquationCql: linkProtocol = 'OGC:WFS'
                - filterName: availableInViewService
                  filterEquationCql: linkProtocol = 'OGC:WMS'
        - ogcProperty: createDate
          elasticProperty: createDate
          indexRecordProperty: createDate
          isSortable: true
          isQueryable: true
          facetsConfig:
            - facetName: createDate
              facetType: HISTOGRAM_FIXED_INTERVAL
              calendarIntervalUnit: MONTH
              bucketCount: 25
              bucketSorting: VALUE
            - facetName: createDate2
              facetType: HISTOGRAM_FIXED_BUCKET_COUNT
              bucketCount: 5
              bucketSorting: VALUE
        - ogcProperty: resourceTitleObject
          elasticProperty: resourceTitleObject.default
          indexRecordProperty: resourceTitle.["default"]
          isSortable: true
          isQueryable: true
        - ogcProperty: resolutionScaleDenominator
          elasticProperty: resolutionScaleDenominator
          indexRecordProperty: resolutionScaleDenominator
          isSortable: true
          isQueryable: true
          facetsConfig:
            - facetName: resolutionScaleDenominator
              facetType: HISTOGRAM_FIXED_INTERVAL
              numberBucketInterval: 100000
              bucketCount: 25
              bucketSorting: VALUE
            - facetName: resolutionScaleDenominator2
              facetType: HISTOGRAM_FIXED_BUCKET_COUNT
              bucketCount: 5
              bucketSorting: VALUE
        - ogcProperty: orgForResource
          elasticProperty: OrgForResourceObject.default
          indexRecordProperty: orgForResourceByRole.["OrgForResourceObject"].[*].["default"]
          facetsConfig:
            - facetName: orgForResource
              facetType: TERM
              bucketCount: 50




    links:
      base-path: /ogcapi-records
      # Where is GN5's ogcapi-records located?
      # should end in "/" and shouldn't have "//" in the path
      ogcApiRecordsBaseUrl: ${GN5_BASE_URL:http:////localhost:7979/}${geonetwork.openapi-records.links.base-path}/
      # How to link to GN (can be either GN4 or GN5's GN4 proxy)
      # should end in "/" and shouldn't have "//" in the path
      gnBaseUrl: ${GN4_PROXY_BASE_URL:http:////localhost:7979/geonetwork}/

      # These define what kinds of links should be shown for the ogcapi-records various documents.
      # You probably will not need to modify these.
      landingpage:
        formats:
          - json
          - html
      conformance:
        formats:
          - json
          - html
      collections:
        formats:
          - json
          - html
      collection:
        formats:
          - json
          - html
      queryables:
        formats:
          - json
      items:
        formats:
          - geojson
          - json
      item:
        #formats taken from the formatter api
        # this defines the default profile for a mime type
        profileDefaults:
            - mimetype: application/geo+json
              defaultProfile: http://www.opengis.net/def/profile/OGC/0/ogc-record
            - mimetype: application/json
              defaultProfile: http://www.opengis.net/def/profile/OGC/0/ogc-record
            - mimetype: application/rdf+xml
              defaultProfile: http://geonetwork.net/def/profile/dcat
            - mimetype: application/xml
              defaultProfile: http://geonetwork.net/def/profile/raw-xml
    search:
      # This query filter is always added to all queries
      queryFilter: '+isTemplate:n'
      # When executing a normal `q=...` query, this defines how we do an elastic search.
      queryBase: '(any.\*:(${any}) OR resourceTitleObject.\*:(${any})^2)'
      # Should the elastic query track total hits?  Tracking total hits is expensive, however, is needed for paging.
      trackTotalHits: true
      # What elastic index json record sources (properties) should be retrieved during a query?
      sources:
        - "*"
  core:
    url: ${GN4_BASE_URL:http://localhost:8080/geonetwork}
  url: http://localhost:8080/geonetwork
  index:
    url: ${ELASTIC_URL:http://localhost:9200}
    indexPrefix: gn5-
    indexRecordName: gn-records
    username: elastic
    password: changeme
    elasticsearch:
      settings:
        maxResultWindow: 50000
        mapping:
          totalFields: 10000
  indexing:
    chunksize: 500
    poolsize: 10
    bulktimeout: 45s
    requestimeout: 45000
    # Elasticsearch Bulk Async API
    asynchronous: false
  directory:
    data: /data/dev/gn/5/web/src/main/webapp/WEB-INF/data/data
  settings:
    system:
      metadata:
        prefergrouplogo: true
  security:
    provider: database
    passwordSalt: secret-hash-salt=
    databaseUserAuthProperty: USERNAME_OR_EMAIL

server:
  port: 7979
  servlet:
    context-path: /
  forward-headers-strategy: framework

spring:
  application:
    name: GeoNetwork
  datasource:
    url: jdbc:postgresql://localhost:5432/geonetwork
    driverClassName: org.postgresql.Driver
    #    url: jdbc:h2:mem:gn5
    #    url: jdbc:h2:~/gn;AUTO_SERVER=TRUE
    #    driverClassName: org.h2.Driver
    username: geonetwork
    password: geonetwork
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  #    database-platform: org.hibernate.dialect.H2Dialect
  security:
    oauth2:
      client:
        registration:
          github:
            clientId: github-client-id
            clientSecret: github-client-secret
  #          custom:
  #            client-id: custom-client-id
  #            client-secret: custom-client-secret
  #        provider:
  #          custom:
  #            authorization-uri: https://custom/auth/realms/test/protocol/openid-connect/auth
  #            token-uri: https://custom/auth/realms/test/protocol/openid-connect/token
  #            user-info-uri: https://custom/auth/realms/test/protocol/openid-connect/userinfo
  #            jwk-set-uri: https://custom/auth/realms/test/protocol/openid-connect/certs
  #            issuer-uri: https://custom/auth/realms/test
  cloud:
    gateway:
      mvc:
        routes:
          - id: geonetwork_route
            uri: ${geonetwork.url}
            predicates:
              - Path=${GATEWAY_GEONETWORK_PATH:/geonetwork/**}
            filters:
              - addSimpleGn4SecurityHeader=gn5.to.gn4.trusted.json.auth
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false
  config:
    import:
      optional:classpath:application-data-ingester.yml
management:
  endpoint:
    info:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

springdoc:
  swagger-ui:
    path: /doc/api/


debug: false

logging:
  level:
    org.geonetwork.schemas: DEBUG
    org.geonetwork.data: DEBUG
#    org.geonetwork.tasks.indexing: DEBUG
#    org.elasticsearch.client.RestClient: TRACE
#    org.apache.http.impl.client and org.apache.http.wire: TRACE
#    org.apache.http.headers: TRACE
#    org.springframework.cache: TRACE

---

spring:
  config:
    import:
      optional:classpath:application-test.yml
      optional:classpath:application-data-ingester.yml
    activate:
      on-profile: test
